{"version":3,"sources":["config.js","components/layout/Header.js","components/layout/Stats.js","components/layout/Search.js","components/layout/History.js","components/layout/Footer.js","components/layout/Icon.js","App.js","index.js"],"names":["apiKey","google","darksky","Header","className","Stats","weather","Math","round","windSpeed","temperature","humidity","Search","address","setAddress","handleSelect","value","onChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","map","suggestion","style","backgroundColor","active","description","History","getHistoryLocation","clearStorage","location","item","i","key","onClick","city","localStorage","length","Footer","href","Icon","skyconsRef","coordinates","lat","lng","ref","id","width","height","summary","skycons","require","window","color","App","useState","showHistoryList","setShowHistoryList","setCity","setWeather","setLocation","setCoordinates","usePosition","latitude","longitude","error","useRef","a","geocodeByAddress","results","getLatLng","latLng","loc","setItem","JSON","stringify","useEffect","undefined","getStorage","getItem","parseStorage","parse","axios","get","then","res","data","currently","set","current","icon","play","catch","console","log","currentTarget","splice","clear","ReactDOM","render","document","getElementById"],"mappings":"iUAKeA,G,YALA,CACbC,OAAQ,0CACRC,QAAS,qCCcIC,EAdA,kBACb,gCACE,wBAAIC,UAAU,YAAd,iBCeWC,EAjBD,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACZ,yBAAKF,UAAU,SACb,yBAAKA,UAAU,QACb,qCACA,8BAAOG,KAAKC,MAAMF,EAAQG,WAA1B,SAEF,yBAAKL,UAAU,QACb,qCACA,8BAAOG,KAAKC,MAAMF,EAAQI,aAA1B,OAEF,yBAAKN,UAAU,SACb,yCACA,8BAAOG,KAAKC,MAAyB,IAAnBF,EAAQK,UAA1B,SCyBSC,EApCA,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,WAAYC,EAAxB,EAAwBA,aAAxB,OACb,6BAASX,UAAU,kBACjB,kBAAC,IAAD,CACEY,MAAOH,EACPI,SAAUH,EACVI,SAAUH,IAET,gBAAGI,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,YAAaC,EAA/B,EAA+BA,uBAA/B,EAAuDC,QAAvD,OACC,6BACE,yCACElB,UAAU,uBACNe,EAAc,CAAEI,YAAa,qBAGnC,yBAAKnB,UAAU,aACZgB,EAAYI,KAAI,SAAAC,GACf,IAAMC,EAAQ,CACZC,gBAAiBF,EAAWG,OAAS,UAAY,QAGnD,OACE,uCACExB,UAAU,qBACNiB,EAAuBI,EAAY,CAAEC,WAExCD,EAAWI,uBCJfC,EAtBC,SAAC,GAAD,IAAGC,EAAH,EAAGA,mBAAoBC,EAAvB,EAAuBA,aAAcC,EAArC,EAAqCA,SAArC,OACd,yBAAK7B,UAAU,gBACb,wBAAIA,UAAU,sBACX6B,EAAST,KAAI,SAACU,EAAMC,GAAP,OACZ,wBACE/B,UAAU,mBACVgC,IAAKD,EACLE,QAASN,EACTf,MAAOmB,GAEND,EAAKI,UAIXC,aAAaC,OAAS,EACrB,4BAAQpC,UAAU,oBAAoBiC,QAASL,GAA/C,iBAGE,OCVOS,EARA,kBACb,gCACE,uBAAGrC,UAAU,UAAUsC,KAAK,kCAA5B,yBCoBWC,EAtBF,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYtC,EAAf,EAAeA,QAASuC,EAAxB,EAAwBA,YAAaP,EAArC,EAAqCA,KAArC,OACX,kBAAC,WAAD,KACE,wBAAIlC,UAAU,YACS,aAApByC,EAAYC,KAA0C,aAApBD,EAAYE,IAC3C,qBACAT,GAGN,4BACElC,UAAU,OACV4C,IAAKJ,EACLK,GAAG,OACHC,MAAM,KACNC,OAAO,OAGT,4BAAK7C,EAAQ8C,SAEb,wBAAIhD,UAAU,YAAYG,KAAKC,MAAMF,EAAQI,aAA7C,QCSE2C,EAAU,IADAC,EAAQ,GAARA,CAAmBC,QACnB,CAAY,CAAEC,MAAO,SAiItBC,MA/Hf,WAAe,MAGiCC,oBAAS,GAH1C,mBAGNC,EAHM,KAGWC,EAHX,OAIiBF,mBAAS,IAJ1B,mBAIN7C,EAJM,KAIGC,EAJH,OAKW4C,mBAAS,IALpB,mBAKNpB,EALM,KAKAuB,EALA,OAMiBH,mBAAS,IAN1B,mBAMNpD,EANM,KAMGwD,EANH,OAOmBJ,mBAAS,IAP5B,mBAONzB,EAPM,KAOI8B,EAPJ,OAQyBL,mBAAS,CAC7CZ,IAAK,WACLC,IAAK,aAVM,mBAQNF,EARM,KAQOmB,EARP,OAa0BC,wBAEjCrB,GAfO,EAaLsB,SAbK,EAaKC,UAbL,EAagBC,MAEVC,oBAEbtD,EAAY,uCAAG,WAAMC,GAAN,mBAAAsD,EAAA,sEACGC,2BAAiBvD,GADpB,cACbwD,EADa,gBAEEC,oBAAUD,EAAQ,IAFpB,OAEbE,EAFa,OAGnB5D,EAAWE,GACXgD,EAAeU,GACX7D,IACI8D,EADK,CAET,CAAErC,KAAMzB,EAASiC,IAAK4B,EAAO5B,IAAKC,IAAK2B,EAAO3B,MAFrC,mBAGNd,IAELM,aAAaqC,QAAQ,WAAYC,KAAKC,UAAUH,IAChDZ,EAAYY,GACZd,EAAQhD,GACRC,EAAW,KAbM,2CAAH,sDA8DlB,OAzBAiE,qBAAU,WACR,QAA8BC,IAA1BzC,aAAaN,SAAwB,CACvC,IAAMgD,EAAa1C,aAAa2C,QAAQ,YAClCC,EAAeN,KAAKO,MAAMH,GAChClB,EAAYoB,GAEdE,IACGC,IADH,+EAE4EtF,EAAOE,QAFnF,YAE8F2C,EAAYC,IAF1G,YAEiHD,EAAYE,IAF7H,cAIGwC,MAAK,SAAAC,GACJ1B,EAAW0B,EAAIC,KAAKC,WACpBrC,EAAQsC,IAAI/C,EAAWgD,QAASJ,EAAIC,KAAKC,UAAUG,MACnDxC,EAAQyC,UAOTC,OAAM,SAAA3B,GACL4B,QAAQC,IAAI7B,QAEf,CAACvB,IAGF,yBAAKzC,UAAU,OACb,yBAAKA,UAAU,WAIb,kBAAC,EAAD,CAAQyC,YAAaA,EAAaP,KAAMA,IAExC,kBAAC,EAAD,CACEM,WAAYA,EACZtC,QAASA,EACTuC,YAAaA,EACbP,KAAMA,IAGR,kBAAC,EAAD,CAAOhC,QAASA,IAEhB,kBAAC,EAAD,CACEO,QAASA,EACTC,WAAYA,EACZC,aAAcA,IAGfwB,aAAaC,OAAS,EACrB,4BACEpC,UAAU,cACViC,QAAS,kBAAMuB,GAAoBD,KAElCA,EAAkB,gBAAkB,gBAErC,KAEHA,EACC,kBAAC,EAAD,CACE5B,mBAzEiB,SAAC,GAAuB,IAArBmE,EAAoB,EAApBA,cAC5BlC,EAAe,CACblB,IAAKb,EAASiE,EAAclF,OAAO8B,IACnCC,IAAKd,EAASiE,EAAclF,OAAO+B,MAErCc,EAAQ5B,EAASiE,EAAclF,OAAOsB,OAqE9BN,aAhFW,WACnBC,EAASkE,OAAO,GAChB5D,aAAa6D,QACbpC,EAAe,CAAElB,IAAK,WAAYC,IAAK,cA8E/Bd,SAAUA,IAEV,MAKN,kBAAC,EAAD,QCrJNoE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.66fc038d.chunk.js","sourcesContent":["const apiKey = {\r\n  google: 'AIzaSyCorh4dbsoc_wcEamkiKTIBggBh1MEmHWs',\r\n  darksky: 'a3c9cb68a55dfd881d8f93e880e901c0'\r\n};\r\n\r\nexport default apiKey;\r\n","import React from 'react';\r\n\r\nconst Header = () => (\r\n  <header>\r\n    <h1 className='App-name'>Weather App</h1>\r\n\r\n    {/* <nav>\r\n      <ul className='nav'>\r\n        <li>Home</li>\r\n        {' | '}\r\n        <li>About</li>\r\n      </ul>\r\n    </nav> */}\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Stats = ({ weather }) => (\r\n  <div className='stats'>\r\n    <div className='wind'>\r\n      <h3>Wind:</h3>\r\n      <span>{Math.round(weather.windSpeed)} M/S</span>\r\n    </div>\r\n    <div className='temp'>\r\n      <h3>Temp:</h3>\r\n      <span>{Math.round(weather.temperature)} C</span>\r\n    </div>\r\n    <div className='humid'>\r\n      <h3>Humidity:</h3>\r\n      <span>{Math.round(weather.humidity * 100)} %</span>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Stats;\r\n","import React from 'react';\r\nimport PlacesAutocomplete from 'react-places-autocomplete';\r\n\r\nconst Search = ({ address, setAddress, handleSelect }) => (\r\n  <section className='search-section'>\r\n    <PlacesAutocomplete\r\n      value={address}\r\n      onChange={setAddress}\r\n      onSelect={handleSelect}\r\n    >\r\n      {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n        <div>\r\n          <input\r\n            className='google-search-field'\r\n            {...getInputProps({ placeholder: 'Type address..' })}\r\n          />\r\n\r\n          <div className='google-ul'>\r\n            {suggestions.map(suggestion => {\r\n              const style = {\r\n                backgroundColor: suggestion.active ? '#41b6e6' : '#000'\r\n              };\r\n\r\n              return (\r\n                <div\r\n                  className='google-suggestion'\r\n                  {...getSuggestionItemProps(suggestion, { style })}\r\n                >\r\n                  {suggestion.description}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </PlacesAutocomplete>\r\n  </section>\r\n);\r\n\r\nexport default Search;\r\n","import React from 'react';\r\n\r\nconst History = ({ getHistoryLocation, clearStorage, location }) => (\r\n  <div className='history-comp'>\r\n    <ul className='latest-search-list'>\r\n      {location.map((item, i) => (\r\n        <li\r\n          className='latest-search-li'\r\n          key={i}\r\n          onClick={getHistoryLocation}\r\n          value={i}\r\n        >\r\n          {item.city}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n    {localStorage.length > 0 ? (\r\n      <button className='clear-history-btn' onClick={clearStorage}>\r\n        Clear history\r\n      </button>\r\n    ) : null}\r\n  </div>\r\n);\r\n\r\nexport default History;\r\n","import React from 'react';\r\n\r\nconst Footer = () => (\r\n  <footer>\r\n    <a className='darksky' href='https://darksky.net/poweredby/'>\r\n      Powered by Dark Sky\r\n    </a>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React, { Fragment } from 'react';\r\n\r\nconst Icon = ({ skyconsRef, weather, coordinates, city }) => (\r\n  <Fragment>\r\n    <h2 className='big-city'>\r\n      {coordinates.lat === '59.32932' && coordinates.lng === '18.06858'\r\n        ? 'Stockholm, Sverige'\r\n        : city}\r\n    </h2>\r\n\r\n    <canvas\r\n      className='icon'\r\n      ref={skyconsRef}\r\n      id='icon'\r\n      width='64'\r\n      height='64'\r\n    />\r\n\r\n    <h3>{weather.summary}</h3>\r\n\r\n    <h1 className='temp-big'>{Math.round(weather.temperature)} C</h1>\r\n  </Fragment>\r\n);\r\n\r\nexport default Icon;\r\n","import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport { usePosition } from 'use-position';\nimport './normalize.css';\nimport './App.css';\n\nimport apiKey from './config';\nimport Header from './components/layout/Header';\nimport Stats from './components/layout/Stats';\nimport Search from './components/layout/Search';\nimport History from './components/layout/History';\nimport Footer from './components/layout/Footer';\nimport Icon from './components/layout/Icon';\n\n// Full page loader\n// import Loader from './components/pages/Loader';\n\n// IMPROVEMENTS\n\n// Select with mouseclick on google search when suggestion is active.\n\n// Get position of user and use the weather for that particular place.\n// If he allows it, else get random city.\n\n// localStorage code is ugly, fix that. X\n// + error first launch on github.\n\nconst Skycons = require('skycons')(window);\nconst skycons = new Skycons({ color: '#fff' });\n\nfunction App() {\n  // Full screen loader\n  // const [isLoading, setisLoading] = useState(true);\n  const [showHistoryList, setShowHistoryList] = useState(false);\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState([]);\n  const [location, setLocation] = useState([]);\n  const [coordinates, setCoordinates] = useState({\n    lat: '59.32932',\n    lng: '18.06858'\n  });\n\n  const { latitude, longitude, error } = usePosition();\n\n  const skyconsRef = useRef();\n\n  const handleSelect = async value => {\n    const results = await geocodeByAddress(value);\n    const latLng = await getLatLng(results[0]);\n    setAddress(value);\n    setCoordinates(latLng);\n    if (address) {\n      const loc = [\n        { city: address, lat: latLng.lat, lng: latLng.lng },\n        ...location\n      ];\n      localStorage.setItem('location', JSON.stringify(loc));\n      setLocation(loc);\n      setCity(address);\n      setAddress('');\n    }\n  };\n\n  const clearStorage = () => {\n    location.splice(0);\n    localStorage.clear();\n    setCoordinates({ lat: '58.41086', lng: '15.62157' });\n  };\n\n  const getHistoryLocation = ({ currentTarget }) => {\n    setCoordinates({\n      lat: location[currentTarget.value].lat,\n      lng: location[currentTarget.value].lng\n    });\n    setCity(location[currentTarget.value].city);\n  };\n\n  const getMyLocation = () => {\n    console.log('usePosition added..');\n    console.log(latitude, longitude);\n    setCoordinates({ lat: latitude, lng: longitude });\n  };\n\n  useEffect(() => {\n    if (localStorage.location !== undefined) {\n      const getStorage = localStorage.getItem('location');\n      const parseStorage = JSON.parse(getStorage);\n      setLocation(parseStorage);\n    }\n    axios\n      .get(\n        `https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/${apiKey.darksky}/${coordinates.lat},${coordinates.lng}?units=si`\n      )\n      .then(res => {\n        setWeather(res.data.currently);\n        skycons.set(skyconsRef.current, res.data.currently.icon);\n        skycons.play();\n\n        // Full page intro loader\n        // setTimeout(() => {\n        //   setisLoading(false);\n        // }, 1500);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [coordinates]);\n\n  return (\n    <div className='App'>\n      <div className='wrapper'>\n        {/* Full page intro loader \n        {isLoading ? <Loader /> : null} */}\n\n        <Header coordinates={coordinates} city={city} />\n\n        <Icon\n          skyconsRef={skyconsRef}\n          weather={weather}\n          coordinates={coordinates}\n          city={city}\n        />\n\n        <Stats weather={weather} />\n\n        <Search\n          address={address}\n          setAddress={setAddress}\n          handleSelect={handleSelect}\n        />\n\n        {localStorage.length > 0 ? (\n          <button\n            className='history-btn'\n            onClick={() => setShowHistoryList(!showHistoryList)}\n          >\n            {showHistoryList ? 'Close history' : 'Show history'}\n          </button>\n        ) : null}\n\n        {showHistoryList ? (\n          <History\n            getHistoryLocation={getHistoryLocation}\n            clearStorage={clearStorage}\n            location={location}\n          />\n        ) : null}\n        {/* <button style={{ marginTop: '20px' }} onClick={getMyLocation}>\n          Get position\n        </button> */}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}