{"version":3,"sources":["config.js","components/layout/Header.js","components/layout/Stats.js","components/layout/Search.js","components/layout/History.js","components/layout/Footer.js","components/layout/Icon.js","components/pages/Loader.js","App.js","index.js"],"names":["apiKey","google","darksky","Header","className","Stats","weather","Math","round","windSpeed","temperature","humidity","Search","address","setAddress","handleSelect","value","onChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","map","suggestion","style","backgroundColor","active","description","History","storageLocation","getHistoryLocation","clearStorage","item","i","key","onClick","localStorage","length","Footer","href","Icon","skyconsRef","coordinates","city","lat","lng","ref","id","width","height","summary","Loader","skycons","require","window","color","App","useState","isLoading","setisLoading","showHistoryList","setShowHistoryList","setCity","setWeather","setStorageLocation","storageLatLng","setStorageLatLng","setCoordinates","useRef","a","geocodeByAddress","results","getLatLng","latLng","nextState","cord","setItem","JSON","stringify","useEffect","getStorage","getItem","getStorage2","parseStorage","parse","parseStorage2","axios","get","then","res","data","currently","set","current","icon","play","setTimeout","catch","error","console","log","currentTarget","splice","clear","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a8785cf.chunk.js","sourcesContent":["const apiKey = {\r\n  google: 'AIzaSyCorh4dbsoc_wcEamkiKTIBggBh1MEmHWs',\r\n  darksky: 'a3c9cb68a55dfd881d8f93e880e901c0'\r\n};\r\n\r\nexport default apiKey;\r\n","import React from 'react';\r\n\r\nconst Header = () => (\r\n  <header>\r\n    <h1 className='App-name'>Weather App</h1>\r\n\r\n    {/* <nav>\r\n      <ul className='nav'>\r\n        <li>Home</li>\r\n        {' | '}\r\n        <li>About</li>\r\n      </ul>\r\n    </nav> */}\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Stats = ({ weather }) => (\r\n  <div className='stats'>\r\n    <div className='wind'>\r\n      <h3>Wind:</h3>\r\n      <span>{Math.round(weather.windSpeed)} M/S</span>\r\n    </div>\r\n    <div className='temp'>\r\n      <h3>Temp:</h3>\r\n      <span>{Math.round(weather.temperature)} C</span>\r\n    </div>\r\n    <div className='humid'>\r\n      <h3>Humidity:</h3>\r\n      <span>{Math.round(weather.humidity * 100)} %</span>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Stats;\r\n","import React from 'react';\r\nimport PlacesAutocomplete from 'react-places-autocomplete';\r\n\r\nconst Search = ({ address, setAddress, handleSelect }) => (\r\n  <section className='search-section'>\r\n    <PlacesAutocomplete\r\n      value={address}\r\n      onChange={setAddress}\r\n      onSelect={handleSelect}\r\n    >\r\n      {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n        <div>\r\n          <input\r\n            className='google-search-field'\r\n            {...getInputProps({ placeholder: 'Type address..' })}\r\n          />\r\n\r\n          <div className='google-ul'>\r\n            {suggestions.map(suggestion => {\r\n              const style = {\r\n                backgroundColor: suggestion.active ? '#41b6e6' : '#000'\r\n              };\r\n\r\n              return (\r\n                <div\r\n                  className='google-suggestion'\r\n                  {...getSuggestionItemProps(suggestion, { style })}\r\n                >\r\n                  {suggestion.description}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </PlacesAutocomplete>\r\n  </section>\r\n);\r\n\r\nexport default Search;\r\n","import React from 'react';\r\n\r\nconst History = ({ storageLocation, getHistoryLocation, clearStorage }) => (\r\n  <div className='history-comp'>\r\n    <ul className='latest-search-list'>\r\n      {storageLocation.map((item, i) => (\r\n        <li\r\n          className='latest-search-li'\r\n          key={i}\r\n          onClick={getHistoryLocation}\r\n          value={i}\r\n        >\r\n          {item}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n    {localStorage.length > 0 ? (\r\n      <button className='clear-history-btn' onClick={clearStorage}>\r\n        Clear history\r\n      </button>\r\n    ) : null}\r\n  </div>\r\n);\r\n\r\nexport default History;\r\n","import React from 'react';\r\n\r\nconst Footer = () => (\r\n  <footer>\r\n    <a className='darksky' href='https://darksky.net/poweredby/'>\r\n      Powered by Dark Sky\r\n    </a>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React, { Fragment } from 'react';\r\n\r\nconst Icon = ({ skyconsRef, weather, coordinates, city }) => (\r\n  <Fragment>\r\n    <h2 className='big-city'>\r\n      {coordinates.lat === '58.41086' && coordinates.lng === '15.62157'\r\n        ? 'Link√∂ping, Sverige'\r\n        : city}\r\n    </h2>\r\n\r\n    <canvas\r\n      className='icon'\r\n      ref={skyconsRef}\r\n      id='icon'\r\n      width='64'\r\n      height='64'\r\n    />\r\n\r\n    <h3>{weather.summary}</h3>\r\n\r\n    <h1 className='temp-big'>{Math.round(weather.temperature)} C</h1>\r\n  </Fragment>\r\n);\r\n\r\nexport default Icon;\r\n","import React from 'react';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className='loader'>\r\n      <p className='loadtext'>Loading...</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport './normalize.css';\nimport './App.css';\n\nimport apiKey from './config';\nimport Header from './components/layout/Header';\nimport Stats from './components/layout/Stats';\nimport Search from './components/layout/Search';\nimport History from './components/layout/History';\nimport Footer from './components/layout/Footer';\nimport Icon from './components/layout/Icon';\nimport Loader from './components/pages/Loader';\n\nconst Skycons = require('skycons')(window);\nconst skycons = new Skycons({ color: '#fff' });\n\nfunction App() {\n  const [isLoading, setisLoading] = useState(true);\n  const [showHistoryList, setShowHistoryList] = useState(false);\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState([]);\n  const [storageLocation, setStorageLocation] = useState([]);\n  const [storageLatLng, setStorageLatLng] = useState([]);\n  const [coordinates, setCoordinates] = useState({\n    lat: '58.41086',\n    lng: '15.62157'\n  });\n\n  const skyconsRef = useRef();\n\n  const handleSelect = async value => {\n    const results = await geocodeByAddress(value);\n    const latLng = await getLatLng(results[0]);\n    setAddress(value);\n    setCoordinates(latLng);\n    if (address) {\n      const nextState = [address, ...storageLocation];\n      const cord = [latLng, ...storageLatLng];\n      localStorage.setItem('places', JSON.stringify(nextState));\n      localStorage.setItem('cord', JSON.stringify(cord));\n      setStorageLocation(nextState);\n      setStorageLatLng(cord);\n      setCity(address);\n      setAddress('');\n    }\n  };\n\n  const clearStorage = () => {\n    storageLocation.splice(0);\n    storageLatLng.splice(0);\n    localStorage.clear();\n    setCoordinates({ lat: '58.41086', lng: '15.62157' });\n  };\n\n  const getHistoryLocation = ({ currentTarget }) => {\n    setCoordinates(storageLatLng[currentTarget.value]);\n    setCity(storageLocation[currentTarget.value]);\n  };\n\n  useEffect(() => {\n    if (localStorage.length > 0) {\n      const getStorage = localStorage.getItem('places');\n      const getStorage2 = localStorage.getItem('cord');\n      const parseStorage = JSON.parse(getStorage);\n      const parseStorage2 = JSON.parse(getStorage2);\n      setStorageLocation(parseStorage);\n      setStorageLatLng(parseStorage2);\n    }\n    axios\n      .get(\n        `https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/${apiKey.darksky}/${coordinates.lat},${coordinates.lng}?units=si`\n      )\n      .then(res => {\n        setWeather(res.data.currently);\n        skycons.set(skyconsRef.current, res.data.currently.icon);\n        skycons.play();\n        setTimeout(() => {\n          setisLoading(false);\n        }, 1500);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [coordinates]);\n\n  return (\n    <div className='App'>\n      <div className='wrapper'>\n        {isLoading ? <Loader /> : null}\n        <Header coordinates={coordinates} city={city} />\n\n        <Icon\n          skyconsRef={skyconsRef}\n          weather={weather}\n          coordinates={coordinates}\n          city={city}\n        />\n\n        <Stats weather={weather} />\n\n        <Search\n          address={address}\n          setAddress={setAddress}\n          handleSelect={handleSelect}\n        />\n\n        {localStorage.length > 0 ? (\n          <button\n            className='history-btn'\n            onClick={() => setShowHistoryList(!showHistoryList)}\n          >\n            {showHistoryList ? 'Close history' : 'Show history'}\n          </button>\n        ) : null}\n\n        {showHistoryList ? (\n          <History\n            storageLocation={storageLocation}\n            getHistoryLocation={getHistoryLocation}\n            clearStorage={clearStorage}\n          />\n        ) : null}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}