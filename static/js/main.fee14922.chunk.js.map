{"version":3,"sources":["App.js","config.js","components/layout/Header.js","components/layout/Icon.js","components/layout/Stats.js","components/layout/Search.js","components/layout/History.js","components/layout/Footer.js","components/pages/Loader.js","index.js"],"names":["getFavorite","apiKey","google","darksky","Header","className","Icon","skyconsRef","weather","coordinates","city","saveToFavorites","favorite","lat","lng","ref","id","width","height","Math","round","temperature","summary","Stats","windSpeed","humidity","Search","address","setAddress","handleSelect","value","onChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","map","suggestion","style","backgroundColor","active","description","History","getHistoryLocation","clearStorage","location","item","i","key","onClick","undefined","localStorage","Footer","href","Loader","skycons","require","window","color","App","useState","isLoading","setisLoading","showHistoryList","setShowHistoryList","setCity","setFavorite","setWeather","setLocation","setCoordinates","useRef","a","geocodeByAddress","results","getLatLng","latLng","loc","setItem","JSON","stringify","useEffect","getStorage","parse","getItem","axios","get","then","res","data","currently","set","current","icon","play","setTimeout","catch","error","console","log","fav","currentTarget","splice","clear","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fee14922.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport './normalize.css';\nimport './App.css';\n\nimport apiKey from './config';\nimport Header from './components/layout/Header';\nimport Icon from './components/layout/Icon';\nimport Stats from './components/layout/Stats';\nimport Search from './components/layout/Search';\nimport History from './components/layout/History';\nimport Footer from './components/layout/Footer';\n\n// Full page loader\nimport Loader from './components/pages/Loader';\n\nlet getFavorite;\n\nconst Skycons = require('skycons')(window);\nconst skycons = new Skycons({ color: '#fff' });\n\nconst App = () => {\n  // Full screen loader\n  const [isLoading, setisLoading] = useState(true);\n  const [showHistoryList, setShowHistoryList] = useState(false);\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [favorite, setFavorite] = useState([]);\n  const [weather, setWeather] = useState([]);\n  const [location, setLocation] = useState([]);\n  const [coordinates, setCoordinates] = useState({\n    lat: '59.32932',\n    lng: '18.06858'\n  });\n\n  const skyconsRef = useRef();\n\n  const handleSelect = async value => {\n    const results = await geocodeByAddress(value);\n    const latLng = await getLatLng(results[0]);\n    setAddress(value);\n    setCity(value);\n    setCoordinates(latLng);\n    if (address) {\n      const loc = [\n        { city: value, lat: latLng.lat, lng: latLng.lng },\n        ...location\n      ];\n      localStorage.setItem('location', JSON.stringify(loc));\n      setLocation(loc);\n      setAddress('');\n    }\n  };\n\n  const clearStorage = () => {\n    location.splice(0);\n    setCoordinates({ lat: '59.32932', lng: '18.06858' });\n    localStorage.clear();\n  };\n\n  const getHistoryLocation = ({ currentTarget }) => {\n    setCoordinates({\n      lat: location[currentTarget.value].lat,\n      lng: location[currentTarget.value].lng\n    });\n    setCity(location[currentTarget.value].city);\n  };\n\n  const saveToFavorites = () => {\n    const fav = { city: city, lat: coordinates.lat, lng: coordinates.lng };\n    localStorage.setItem('favorite', JSON.stringify(fav));\n    console.log('Saved to favorites..');\n  };\n\n  useEffect(() => {\n    if (localStorage.location !== undefined) {\n      const getStorage = JSON.parse(localStorage.getItem('location'));\n      setLocation(getStorage);\n    }\n    if (localStorage.favorite !== undefined) {\n      getFavorite = JSON.parse(localStorage.getItem('favorite'));\n      setFavorite(getFavorite);\n      // setCity(getFavorite[0].city);\n    }\n    axios\n      .get(\n        `https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/${apiKey.darksky}/${coordinates.lat},${coordinates.lng}?units=si`\n      )\n      .then(res => {\n        setWeather(res.data.currently);\n        skycons.set(skyconsRef.current, res.data.currently.icon);\n        skycons.play();\n\n        // Full page intro loader\n        setTimeout(() => {\n          setisLoading(false);\n        }, 1500);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [coordinates]);\n\n  return (\n    <div className='App'>\n      <div className='wrapper'>\n        {/* Full page intro loader  */}\n        {isLoading ? <Loader /> : null}\n\n        <Header coordinates={coordinates} city={city} />\n\n        <Icon\n          skyconsRef={skyconsRef}\n          weather={weather}\n          coordinates={coordinates}\n          city={city}\n          saveToFavorites={saveToFavorites}\n          favorite={favorite}\n        />\n\n        <Stats weather={weather} />\n\n        <Search\n          address={address}\n          setAddress={setAddress}\n          handleSelect={handleSelect}\n        />\n\n        {localStorage.location !== undefined ? (\n          <button\n            className='history-btn'\n            onClick={() => setShowHistoryList(!showHistoryList)}\n          >\n            {showHistoryList ? 'Close history' : 'Show history'}\n          </button>\n        ) : null}\n\n        {showHistoryList ? (\n          <History\n            getHistoryLocation={getHistoryLocation}\n            clearStorage={clearStorage}\n            location={location}\n          />\n        ) : null}\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","const apiKey = {\r\n  google: 'AIzaSyCorh4dbsoc_wcEamkiKTIBggBh1MEmHWs',\r\n  darksky: 'a3c9cb68a55dfd881d8f93e880e901c0'\r\n};\r\n\r\nexport default apiKey;\r\n","import React from 'react';\r\n\r\nconst Header = () => (\r\n  <header>\r\n    <h1 className='App-name'>Weather App</h1>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React, { Fragment } from 'react';\r\n\r\nconst Icon = ({\r\n  skyconsRef,\r\n  weather,\r\n  coordinates,\r\n  city,\r\n  saveToFavorites,\r\n  favorite\r\n}) => (\r\n    <Fragment>\r\n      <h2 className='big-city'>\r\n        {coordinates.lat === '59.32932' && coordinates.lng === '18.06858'\r\n          ? 'Stockholm, Sverige'\r\n          : city}\r\n      </h2>\r\n\r\n      {/* <button className='save-favorites' onClick={saveToFavorites}>\r\n      Save\r\n    </button> */}\r\n\r\n      <div className='icon-temp'>\r\n        <canvas\r\n          className='icon'\r\n          ref={skyconsRef}\r\n          id='icon'\r\n          width='64'\r\n          height='64'\r\n        />\r\n\r\n        <h1 className='temp-big'>{Math.round(weather.temperature)} C</h1>\r\n      </div>\r\n\r\n      <h3>{weather.summary}</h3>\r\n    </Fragment>\r\n  );\r\n\r\nexport default Icon;\r\n","import React from 'react';\r\n\r\nconst Stats = ({ weather }) => (\r\n  <div className='stats'>\r\n    <div className='wind'>\r\n      <h3>Wind:</h3>\r\n      <span>{Math.round(weather.windSpeed)} M/S</span>\r\n    </div>\r\n    <div className='temp'>\r\n      <h3>Temp:</h3>\r\n      <span>{Math.round(weather.temperature)} C</span>\r\n    </div>\r\n    <div className='humid'>\r\n      <h3>Humidity:</h3>\r\n      <span>{Math.round(weather.humidity * 100)} %</span>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Stats;\r\n","import React from 'react';\r\nimport PlacesAutocomplete from 'react-places-autocomplete';\r\n\r\nconst Search = ({ address, setAddress, handleSelect }) => (\r\n  <section className='search-section'>\r\n    <PlacesAutocomplete\r\n      value={address}\r\n      onChange={setAddress}\r\n      onSelect={handleSelect}\r\n    >\r\n      {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n        <div>\r\n          <input\r\n            className='google-search-field'\r\n            {...getInputProps({ placeholder: 'Type address..' })}\r\n          />\r\n\r\n          <div className='google-ul'>\r\n            {suggestions.map(suggestion => {\r\n              const style = {\r\n                backgroundColor: suggestion.active\r\n                  ? '#41b6e6'\r\n                  : 'rgb(56, 56, 56)'\r\n              };\r\n\r\n              return (\r\n                <div\r\n                  className='google-suggestion'\r\n                  {...getSuggestionItemProps(suggestion, { style })}\r\n                >\r\n                  {suggestion.description}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </PlacesAutocomplete>\r\n  </section>\r\n);\r\n\r\nexport default Search;\r\n","import React from 'react';\r\n\r\nconst History = ({ getHistoryLocation, clearStorage, location }) => (\r\n  <div className='history-comp'>\r\n    <ul className='latest-search-list'>\r\n      {location.map((item, i) => (\r\n        <li\r\n          className='latest-search-li'\r\n          key={i}\r\n          onClick={getHistoryLocation}\r\n          value={i}\r\n        >\r\n          {item.city}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n    {localStorage.location !== undefined ? (\r\n      <button className='clear-history-btn' onClick={clearStorage}>\r\n        Clear history\r\n      </button>\r\n    ) : null}\r\n  </div>\r\n);\r\n\r\nexport default History;\r\n","import React from 'react';\r\n\r\nconst Footer = () => (\r\n  <footer>\r\n    <a className='darksky' href='https://darksky.net/poweredby/'>\r\n      Powered by Dark Sky\r\n    </a>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className='loader'>\r\n      <div className='loader-cloud'>\r\n        <div className='cloud'></div>\r\n        <div className='cloud'></div>\r\n        <div className='cloud'></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}