{"version":3,"sources":["config.js","components/layout/Header.js","components/layout/Icon.js","components/layout/Stats.js","components/layout/Search.js","components/layout/History.js","components/layout/Footer.js","components/pages/Loader.js","App.js","index.js"],"names":["apiKey","google","darksky","Header","className","Icon","skyconsRef","weather","coordinates","city","lat","lng","ref","id","width","height","Math","round","temperature","summary","Stats","windSpeed","humidity","Search","address","setAddress","handleSelect","value","onChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","map","suggestion","style","backgroundColor","active","description","History","getHistoryLocation","clearStorage","location","item","i","key","onClick","localStorage","length","Footer","href","Loader","skycons","require","window","color","App","useState","isLoading","setisLoading","showHistoryList","setShowHistoryList","setCity","setWeather","setLocation","setCoordinates","useRef","a","geocodeByAddress","results","getLatLng","latLng","loc","setItem","JSON","stringify","useEffect","undefined","getStorage","parse","getItem","axios","get","then","res","data","currently","set","current","icon","play","setTimeout","catch","error","console","log","currentTarget","splice","clear","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ef66eae7.chunk.js","sourcesContent":["const apiKey = {\r\n  google: 'AIzaSyCorh4dbsoc_wcEamkiKTIBggBh1MEmHWs',\r\n  darksky: 'a3c9cb68a55dfd881d8f93e880e901c0'\r\n};\r\n\r\nexport default apiKey;\r\n","import React from 'react';\r\n\r\nconst Header = () => (\r\n  <header>\r\n    <h1 className='App-name'>Weather App</h1>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React, { Fragment } from 'react';\r\n\r\nconst Icon = ({ skyconsRef, weather, coordinates, city }) => (\r\n  <Fragment>\r\n    <h2 className='big-city'>\r\n      {coordinates.lat === '59.32932' && coordinates.lng === '18.06858'\r\n        ? 'Stockholm, Sverige'\r\n        : city}\r\n    </h2>\r\n\r\n    <div className='icon-temp'>\r\n      <canvas\r\n        className='icon'\r\n        ref={skyconsRef}\r\n        id='icon'\r\n        width='64'\r\n        height='64'\r\n      />\r\n\r\n      <h1 className='temp-big'>{Math.round(weather.temperature)} C</h1>\r\n    </div>\r\n\r\n    <h3>{weather.summary}</h3>\r\n  </Fragment>\r\n);\r\n\r\nexport default Icon;\r\n","import React from 'react';\r\n\r\nconst Stats = ({ weather }) => (\r\n  <div className='stats'>\r\n    <div className='wind'>\r\n      <h3>Wind:</h3>\r\n      <span>{Math.round(weather.windSpeed)} M/S</span>\r\n    </div>\r\n    <div className='temp'>\r\n      <h3>Temp:</h3>\r\n      <span>{Math.round(weather.temperature)} C</span>\r\n    </div>\r\n    <div className='humid'>\r\n      <h3>Humidity:</h3>\r\n      <span>{Math.round(weather.humidity * 100)} %</span>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Stats;\r\n","import React from 'react';\r\nimport PlacesAutocomplete from 'react-places-autocomplete';\r\n\r\nconst Search = ({ address, setAddress, handleSelect }) => (\r\n  <section className='search-section'>\r\n    <PlacesAutocomplete\r\n      value={address}\r\n      onChange={setAddress}\r\n      onSelect={handleSelect}\r\n    >\r\n      {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n        <div>\r\n          <input\r\n            className='google-search-field'\r\n            {...getInputProps({ placeholder: 'Type address..' })}\r\n          />\r\n\r\n          <div className='google-ul'>\r\n            {suggestions.map(suggestion => {\r\n              const style = {\r\n                backgroundColor: suggestion.active\r\n                  ? '#41b6e6'\r\n                  : 'rgb(56, 56, 56)'\r\n              };\r\n\r\n              return (\r\n                <div\r\n                  className='google-suggestion'\r\n                  {...getSuggestionItemProps(suggestion, { style })}\r\n                >\r\n                  {suggestion.description}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </PlacesAutocomplete>\r\n  </section>\r\n);\r\n\r\nexport default Search;\r\n","import React from 'react';\r\n\r\nconst History = ({ getHistoryLocation, clearStorage, location }) => (\r\n  <div className='history-comp'>\r\n    <ul className='latest-search-list'>\r\n      {location.map((item, i) => (\r\n        <li\r\n          className='latest-search-li'\r\n          key={i}\r\n          onClick={getHistoryLocation}\r\n          value={i}\r\n        >\r\n          {item.city}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n    {localStorage.length > 0 ? (\r\n      <button className='clear-history-btn' onClick={clearStorage}>\r\n        Clear history\r\n      </button>\r\n    ) : null}\r\n  </div>\r\n);\r\n\r\nexport default History;\r\n","import React from 'react';\r\n\r\nconst Footer = () => (\r\n  <footer>\r\n    <a className='darksky' href='https://darksky.net/poweredby/'>\r\n      Powered by Dark Sky\r\n    </a>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className='loader'>\r\n      <div className='loader-cloud'>\r\n        <div className='cloud'></div>\r\n        <div className='cloud'></div>\r\n        <div className='cloud'></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport './normalize.css';\nimport './App.css';\n\nimport apiKey from './config';\nimport Header from './components/layout/Header';\nimport Icon from './components/layout/Icon';\nimport Stats from './components/layout/Stats';\nimport Search from './components/layout/Search';\nimport History from './components/layout/History';\nimport Footer from './components/layout/Footer';\n\n// Full page loader\nimport Loader from './components/pages/Loader';\n\n// IMPROVEMENTS\n//  - Style app, media queries\n//  - Full page loader, add opacity transition when loader turns false.\n//  - Favorites\n//  - Pre determined saved locations 3 big cities\n\nconst Skycons = require('skycons')(window);\nconst skycons = new Skycons({ color: '#fff' });\n\nconst App = () => {\n  // Full screen loader\n  const [isLoading, setisLoading] = useState(true);\n  const [showHistoryList, setShowHistoryList] = useState(false);\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [weather, setWeather] = useState([]);\n  const [location, setLocation] = useState([]);\n  const [coordinates, setCoordinates] = useState({\n    lat: '59.32932',\n    lng: '18.06858'\n  });\n\n  const skyconsRef = useRef();\n\n  const handleSelect = async value => {\n    const results = await geocodeByAddress(value);\n    const latLng = await getLatLng(results[0]);\n    setAddress(value);\n    setCity(value);\n    setCoordinates(latLng);\n    if (address) {\n      const loc = [\n        { city: value, lat: latLng.lat, lng: latLng.lng },\n        ...location\n      ];\n      localStorage.setItem('location', JSON.stringify(loc));\n      setLocation(loc);\n      setAddress('');\n    }\n  };\n\n  const clearStorage = () => {\n    location.splice(0);\n    localStorage.clear();\n    setCoordinates({ lat: '59.32932', lng: '18.06858' });\n  };\n\n  const getHistoryLocation = ({ currentTarget }) => {\n    setCoordinates({\n      lat: location[currentTarget.value].lat,\n      lng: location[currentTarget.value].lng\n    });\n    setCity(location[currentTarget.value].city);\n  };\n\n  useEffect(() => {\n    if (localStorage.location !== undefined) {\n      const getStorage = JSON.parse(localStorage.getItem('location'));\n      setLocation(getStorage);\n    }\n    axios\n      .get(\n        `https://cors-anywhere.herokuapp.com/https://api.darksky.net/forecast/${apiKey.darksky}/${coordinates.lat},${coordinates.lng}?units=si`\n      )\n      .then(res => {\n        setWeather(res.data.currently);\n        skycons.set(skyconsRef.current, res.data.currently.icon);\n        skycons.play();\n\n        // Full page intro loader\n        setTimeout(() => {\n          setisLoading(false);\n        }, 1500);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [coordinates]);\n\n  return (\n    <div className='App'>\n      <div className='wrapper'>\n        {/* Full page intro loader  */}\n        {isLoading ? <Loader /> : null}\n\n        <Header coordinates={coordinates} city={city} />\n\n        <Icon\n          skyconsRef={skyconsRef}\n          weather={weather}\n          coordinates={coordinates}\n          city={city}\n        />\n\n        <Stats weather={weather} />\n\n        <Search\n          address={address}\n          setAddress={setAddress}\n          handleSelect={handleSelect}\n        />\n\n        {localStorage.length > 0 ? (\n          <button\n            className='history-btn'\n            onClick={() => setShowHistoryList(!showHistoryList)}\n          >\n            {showHistoryList ? 'Close history' : 'Show history'}\n          </button>\n        ) : null}\n\n        {showHistoryList ? (\n          <History\n            getHistoryLocation={getHistoryLocation}\n            clearStorage={clearStorage}\n            location={location}\n          />\n        ) : null}\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}